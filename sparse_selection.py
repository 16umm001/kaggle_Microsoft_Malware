## feature selection from sparse matrix
import pickle
from sklearn.linear_model import SGDClassifier as SGD
import numpy as np
print "reading pickles..."
clf = SGD(loss='log', shuffle=True, random_state=1234)
train = pickle.load(open('Xallsparse.p','rb'))
labels = pickle.load(open('y.p','rb'))
test = pickle.load(open('Xallsparse_test.p','rb'))
train_id = pickle.load(open('xid.p','rb'))
test_id = pickle.load(open('Xt_id.p','rb'))
print "start fitting..."
clf.fit(train,labels)
fea1_train = np.array(clf.transform(train, '2*mean').todense())
fea1_test = np.array(clf.transform(test, '2*mean').todense())
fea2_train = np.array(clf.transform(train, 'mean').todense())
fea2_test = np.array(clf.transform(test, 'mean').todense())
fea3_train = np.array(clf.transform(train, '10*mean').todense())
fea3_test = np.array(clf.transform(test, '10*mean').todense())
print "start writing results..."
train1 = np.column_stack((train_id, fea1_train))
train1 = pd.DataFrame(train1, columns=['Id']+['SP_'+str(x) for x in xrange(fea1_train.shape[1])])
test1 = np.column_stack((test_id, fea1_test))
test1 = pd.DataFrame(test1, columns=['Id']+['SP_'+str(x) for x in xrange(fea1_test.shape[1])])
print train1.shape  # (10868, 1116)
train1.to_csv('sparse_train1.csv',index = False)
test1.to_csv('sparse_test1.csv',index = False)

train2 = np.column_stack((train_id, fea2_train))
train2 = pd.DataFrame(train2, columns=['Id']+['SP_'+str(x) for x in xrange(fea2_train.shape[1])])
test2 = np.column_stack((test_id, fea2_test))
test2 = pd.DataFrame(test2, columns=['Id']+['SP_'+str(x) for x in xrange(fea2_test.shape[1])])
train2.to_csv('sparse_train2.csv',index = False)
test2.to_csv('sparse_test2.csv',index = False)
print train2.shape #(10868, 1693)

train3 = np.column_stack((train_id, fea3_train))
train3 = pd.DataFrame(train3, columns=['Id']+['SP_'+str(x) for x in xrange(fea3_train.shape[1])])
test3 = np.column_stack((test_id, fea3_test))
test3 = pd.DataFrame(test3, columns=['Id']+['SP_'+str(x) for x in xrange(fea3_test.shape[1])])
train3.to_csv('sparse_train3.csv',index = False)
test3.to_csv('sparse_test3.csv',index = False)
print train3.shape #(10868, 494)
print "all done..."